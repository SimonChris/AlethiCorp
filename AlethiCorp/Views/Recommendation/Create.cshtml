@model AlethiCorp.Models.Recommendation

@{
  ViewBag.Title = "New recommendation";
}

<h2>New recommendation</h2>


@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <h4>Recommendation</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
      @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new
            {
              htmlAttributes = new
              {
                @class = "form-control",
                data_autocomplete = Url.Action("NameSuggestions")
              }
            })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ThreatLevel, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.ThreatLevel, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ThreatLevel, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ThreatType, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.ThreatType, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ThreatType, "", new { @class = "text-danger" })
      </div>
    </div>

    @if (ViewBag.DroneStrike)
    {
      <div class="form-group">
        @Html.LabelFor(model => model.DroneStrike, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          <div class="checkbox">
            @Html.EditorFor(model => model.DroneStrike)
            @Html.ValidationMessageFor(model => model.DroneStrike, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>
    }

    <div class="form-group">
      @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default" />
      </div>
    </div>
  </div>
}
<div>
  <a class="btn btn-default" href="@Url.Action("Index")">Back to List</a>
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
